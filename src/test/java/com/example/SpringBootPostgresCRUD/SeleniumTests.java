package com.example.SpringBootPostgresCRUD;

// Generated by Selenium IDE
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.stereotype.Component;
import org.springframework.test.context.junit4.SpringRunner;

import com.example.SpringBootPostgresCRUD.entity.Artista;
import com.example.SpringBootPostgresCRUD.repo.ArrendadorRepository;
import com.example.SpringBootPostgresCRUD.repo.ArtistaRepository;
import com.example.SpringBootPostgresCRUD.service.ArrendadorService;
import com.example.SpringBootPostgresCRUD.service.ArtistaService;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.util.concurrent.TimeUnit;
import java.net.MalformedURLException;
import java.net.URL;

@SpringBootTest
@RunWith(SpringRunner.class)
public class SeleniumTests {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;

  @Mock
  private ArrendadorRepository arrendadorRepository;

	@Mock
  private ArtistaRepository artistaRepository;

  @InjectMocks
  private ArrendadorService arrendadorService;

	@InjectMocks
  private ArtistaService artistaService;


  @Before
  public void setUp() {
    //System.setProperty("webdriver.edge.driver", "..\\bart\\src\\test\\msedgedriver.exe");
    System.setProperty("webdriver.chrome.driver", "..\\bart\\src\\test\\chromedriver111.exe");
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }

  @After
  public void tearDown() {
    driver.quit();
  }

  @Test
  public void signUpAndLoginTest() {
    driver.get("http://localhost:8080/");
    Artista artista = artistaService.getArtistaByMailArtista("john@gmail.com");
    if (artista != null) {
      driver.findElement(By.linkText("Registrarse como artista")).click();

      driver.findElement(By.id("urlImagen"))
          .sendKeys("https://album.mediaset.es/eimg/10000/2021/07/28/clipping_40n7Tq_ded9.jpg?w=1200");
      driver.findElement(By.id("firstName")).sendKeys("John");
      driver.findElement(By.id("lastName")).sendKeys("Lennon");
      driver.findElement(By.id("gender1")).click();
      driver.findElement(By.id("dob")).sendKeys("2023-04-01");
      driver.findElement(By.id("email")).sendKeys("john@gmail.com");
      driver.findElement(By.id("password")).sendKeys("password");
      driver.findElement(By.id("nombre_artistico")).sendKeys("John Lennon");
      driver.findElement(By.id("categoria_artistica")).sendKeys("rock");
      driver.findElement(By.cssSelector(".btn")).click();
    }
    driver.findElement(By.linkText("Iniciar sesi√≥n")).click();
    driver.findElement(By.id("username")).sendKeys("john@gmail.com");
    driver.findElement(By.id("password")).sendKeys("password");
    driver.findElement(By.cssSelector(".btn")).click();

    driver.findElement(By.id("navbarDropdown")).click();
    driver.findElement(By.linkText("Ver mi perfil")).click();
    driver.findElement(By.cssSelector("html")).click();

    String expectedTitle = "Perfil artista";
    String actualTitle = driver.getTitle();
    assertEquals(expectedTitle, actualTitle);

  }
}
